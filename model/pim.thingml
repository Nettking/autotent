import "pim_messages.thingml"
import "javatimer.thingml"

thing PIM includes GeneralMsg, PixelMsg, PlantStateMsg, TimerMsgs {

    required port timer {
        sends timer_start, timer_cancel
        receives timer_timeout
    }

    required port to_psm {
        sends Plant_State
    }
    provided port from_psm {
        receives dark_green_pixel_count, green_pixel_count, light_green_pixel_count, side_camera_height
    }

    property current_plant_state:String = "Idle"
    property current_light_green_pixel_count:Double = 0
    property current_green_pixel_count:Double = 0
    property current_dark_green_pixel_count:Double = 0
    property green_pixel_sum:Double = 0
    property section_id:Integer

    statechart Plant_State init Germination {
        state Germination {
            on entry do
                if (current_plant_state=="Germination") do
                    // Dont do anything if its already in this state
                end
                else
                do 
                    current_plant_state = "Germination"
                    to_psm!Plant_State(current_plant_state)
                    timer!timer_start(10 * 24 * 60 * 60 * 1000) // 10 days in milliseconds
                end
            end
            on exit do 
                timer!timer_cancel()
            end 
            

            transition -> Dying_During_Germination 
                event timeout:timer?timer_timeout
                guard timeout.id == section_id
            
            
            transition -> Seedling
                event height:from_psm?side_camera_height
                guard height.id == section_id and height.h > 0
            
            
        }

        state Seedling {
            on entry do
                if (current_plant_state=="Seedling") do
                    // Dont do anything if its already in this state
                end
                else
                do 
                    current_plant_state = "Seedling"
                    to_psm!Plant_State(current_plant_state)
                    timer!timer_start(14 * 24 * 60 * 60 * 1000) // 14 days in milliseconds
                end
            end
            on exit do  
                timer!timer_cancel()
            end 

            transition -> Dying_During_Seedling
                event timout:timer?timer_timeout
                guard timout.id == section_id
                        
            transition -> Growing 
                event LGPC:from_psm?light_green_pixel_count
                guard LGPC.id == section_id and LGPC.c > 0
                action do
                    current_light_green_pixel_count = LGPC.c
                end
            
            transition -> Growing
                event MGPC:from_psm?green_pixel_count
                guard MGPC.id == section_id and MGPC.c > 0
                action do
                    current_green_pixel_count = MGPC.c
                end


            transition -> Growing
                event DGPC:from_psm?dark_green_pixel_count
                guard DGPC.id == section_id and DGPC.c > 0
                action do
                    current_dark_green_pixel_count = DGPC.c
                end

        }

        state Growing {
            on entry do
                if (current_plant_state=="Growing") do
                    // Dont do anything if its already in this state
                end
                else
                do 
                    current_plant_state = "Growing"
                    to_psm!Plant_State(current_plant_state)
                    green_pixel_sum = current_dark_green_pixel_count + current_green_pixel_count + current_light_green_pixel_count
                end
            end
            
            transition -> Dying_During_Growing
                event section:from_psm?green_pixel_count
                guard section.id == section_id and green_pixel_sum < current_dark_green_pixel_count + current_green_pixel_count + current_light_green_pixel_count
            
            transition -> Dying_During_Growing
                event section:from_psm?light_green_pixel_count
                guard section.id == section_id and green_pixel_sum < current_dark_green_pixel_count + current_green_pixel_count + current_light_green_pixel_count
            
            transition -> Dying_During_Growing
                event section:from_psm?dark_green_pixel_count
                guard section.id == section_id and green_pixel_sum < current_dark_green_pixel_count + current_green_pixel_count + current_light_green_pixel_count
            

            transition -> Fruting
                event DGPC:from_psm?dark_green_pixel_count
                guard DGPC.id == section_id and DGPC.c > current_green_pixel_count + current_light_green_pixel_count
            

            
        }

        state Fruting {
            on entry do
            if (current_plant_state=="Fruting") do
                    // Dont do anything if its already in this state
                end
                else
                do
                    current_plant_state = "Fruting"
                    to_psm!Plant_State(current_plant_state)
                    green_pixel_sum = current_dark_green_pixel_count + current_green_pixel_count + current_light_green_pixel_count
                end
            end
            
            transition -> Growing
                event LGPC:from_psm?light_green_pixel_count
                guard LGPC.id == section_id and LGPC.c > current_dark_green_pixel_count
                action do 
                    current_light_green_pixel_count = LGPC.c
                end

            transition -> Growing
                event MGPC:from_psm?green_pixel_count
                guard MGPC.id == section_id and MGPC.c > current_dark_green_pixel_count
                action do 
                    current_green_pixel_count = MGPC.c
                end

            transition -> Dying_During_Fruting
                event DGPC:from_psm?dark_green_pixel_count
                guard DGPC.id == section_id and DGPC.c < green_pixel_sum
            
            
        }

        state Dying_During_Germination {
            on entry do
            if (current_plant_state=="Dying During Germination") do
                    // Dont do anything if its already in this state
                end
                else
                do
                    current_plant_state = "Dying During Germination"
                    to_psm!Plant_State(current_plant_state)
                end
            end

            transition -> Seedling
                event height:from_psm?side_camera_height
                guard height.id == section_id and height.h > 0

        }

        state Dying_During_Seedling {
            on entry do
            if (current_plant_state=="Dying During Seedling") do
                    // Dont do anything if its already in this state
                end
                else
                do
                    current_plant_state = "Dying During Seedling"
                    to_psm!Plant_State(current_plant_state)
                end
            end

            transition -> Seedling
                event height:from_psm?side_camera_height
                guard height.id == section_id and height.h > 0
            
        }

        state Dying_During_Growing {
            on entry do
                if (current_plant_state=="Dying During Growing") do
                    // Dont do anything if its already in this state
                end
                else
                do
                    current_plant_state = "Dying During Growing"
                    to_psm!Plant_State(current_plant_state)
                    green_pixel_sum = current_dark_green_pixel_count + current_green_pixel_count + current_light_green_pixel_count
                end
            end

            transition -> Growing
                event LGPC:from_psm?light_green_pixel_count
                guard LGPC.id == section_id and green_pixel_sum < current_dark_green_pixel_count + current_green_pixel_count + current_light_green_pixel_count
                action do 
                    current_light_green_pixel_count = LGPC.c
                end

            transition -> Growing
                event MGPC:from_psm?green_pixel_count
                guard MGPC.id == section_id and green_pixel_sum < current_dark_green_pixel_count + current_green_pixel_count + current_light_green_pixel_count
                action do 
                    current_green_pixel_count = MGPC.c
                end

            transition -> Growing
                event DGPC:from_psm?dark_green_pixel_count
                guard DGPC.id == section_id and green_pixel_sum < current_dark_green_pixel_count + current_green_pixel_count + current_light_green_pixel_count
                action do 
                    current_green_pixel_count = DGPC.c
                end

        }

        state Dying_During_Fruting {
            on entry do
            if (current_plant_state=="Dying During Fruting") do
                    // Dont do anything if its already in this state
                end
                else
                do
                    current_plant_state = "Dying During Fruting"
                    to_psm!Plant_State(current_plant_state)
                    green_pixel_sum = current_dark_green_pixel_count + current_green_pixel_count + current_light_green_pixel_count
                end
            end

            transition -> Growing
                event LGPC:from_psm?light_green_pixel_count
                guard LGPC.id == section_id and green_pixel_sum < current_dark_green_pixel_count + current_green_pixel_count + current_light_green_pixel_count
                action do 
                    current_light_green_pixel_count = LGPC.c
                end

            transition -> Growing
                event MGPC:from_psm?green_pixel_count
                guard MGPC.id == section_id and green_pixel_sum < current_dark_green_pixel_count + current_green_pixel_count + current_light_green_pixel_count
                action do 
                    current_green_pixel_count = MGPC.c
                end

            transition -> Growing
                event DGPC:from_psm?dark_green_pixel_count
                guard DGPC.id == section_id and green_pixel_sum < current_dark_green_pixel_count + current_green_pixel_count + current_light_green_pixel_count
                action do 
                    current_green_pixel_count = DGPC.c
                end

        }

    }
}