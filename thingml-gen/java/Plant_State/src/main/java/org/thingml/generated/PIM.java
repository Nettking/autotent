/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated;

import no.sintef.jasm.*;
import no.sintef.jasm.ext.*;

import org.thingml.generated.api.*;
import org.thingml.generated.messages.*;

import java.util.*;

/**
 * Definition for type : PIM
 **/
public class PIM extends Component implements IPIM_from_psm, IPIM_timer {

private boolean debug = false;
public boolean isDebug() {return debug;}
public void setDebug(boolean debug) {this.debug = debug;}
public String toString() {
String result = "instance " + getName() + "\n";
result += "\tcurrent_plant_state = " + PIM_current_plant_state_var;
result += "\tcurrent_light_green_pixel_count = " + PIM_current_light_green_pixel_count_var;
result += "\tcurrent_green_pixel_count = " + PIM_current_green_pixel_count_var;
result += "\tcurrent_dark_green_pixel_count = " + PIM_current_dark_green_pixel_count_var;
result += "\tgreen_pixel_sum = " + PIM_green_pixel_sum_var;
result += "\tsection_id = " + PIM_section_id_var;
result += "";
return result;
}

public synchronized void timer_timeout_via_timer(int TimerMsgs_timer_timeout_id_var){
final Event _msg = timer_timeoutType.instantiate(TimerMsgs_timer_timeout_id_var);
_msg.setPort(timer_port);
receive(_msg);
}

public synchronized void dark_green_pixel_count_via_from_psm(int PixelMsg_dark_green_pixel_count_id_var, String PixelMsg_dark_green_pixel_count_txt_var, double PixelMsg_dark_green_pixel_count_c_var){
final Event _msg = dark_green_pixel_countType.instantiate(PixelMsg_dark_green_pixel_count_id_var, PixelMsg_dark_green_pixel_count_txt_var, PixelMsg_dark_green_pixel_count_c_var);
_msg.setPort(from_psm_port);
receive(_msg);
}

public synchronized void green_pixel_count_via_from_psm(int PixelMsg_green_pixel_count_id_var, String PixelMsg_green_pixel_count_txt_var, double PixelMsg_green_pixel_count_c_var){
final Event _msg = green_pixel_countType.instantiate(PixelMsg_green_pixel_count_id_var, PixelMsg_green_pixel_count_txt_var, PixelMsg_green_pixel_count_c_var);
_msg.setPort(from_psm_port);
receive(_msg);
}

public synchronized void light_green_pixel_count_via_from_psm(int PixelMsg_light_green_pixel_count_id_var, String PixelMsg_light_green_pixel_count_txt_var, double PixelMsg_light_green_pixel_count_c_var){
final Event _msg = light_green_pixel_countType.instantiate(PixelMsg_light_green_pixel_count_id_var, PixelMsg_light_green_pixel_count_txt_var, PixelMsg_light_green_pixel_count_c_var);
_msg.setPort(from_psm_port);
receive(_msg);
}

public synchronized void side_camera_height_via_from_psm(int PixelMsg_side_camera_height_id_var, String PixelMsg_side_camera_height_txt_var, double PixelMsg_side_camera_height_h_var){
final Event _msg = side_camera_heightType.instantiate(PixelMsg_side_camera_height_id_var, PixelMsg_side_camera_height_txt_var, PixelMsg_side_camera_height_h_var);
_msg.setPort(from_psm_port);
receive(_msg);
}

private void sendTimer_start_via_timer(int TimerMsgs_timer_start_delay_var){
timer_port.send(timer_startType.instantiate(TimerMsgs_timer_start_delay_var));
}

private void sendTimer_cancel_via_timer(){
timer_port.send(timer_cancelType.instantiate());
}

private void sendPlant_State_via_to_psm(String PlantStateMsg_Plant_State_txt_var){
to_psm_port.send(Plant_StateType.instantiate(PlantStateMsg_Plant_State_txt_var));
}

//Attributes
private double PIM_current_green_pixel_count_var;
private int PIM_section_id_var;
private double PIM_green_pixel_sum_var;
private String PIM_current_plant_state_var;
private double PIM_current_dark_green_pixel_count_var;
private double PIM_current_light_green_pixel_count_var;
//Ports
private Port timer_port;
private Port to_psm_port;
private Port from_psm_port;
//Message types
protected final PromptMessageType promptType = new PromptMessageType();
protected final Light_green_pixel_countMessageType light_green_pixel_countType = new Light_green_pixel_countMessageType();
protected final Green_pixel_countMessageType green_pixel_countType = new Green_pixel_countMessageType();
protected final Dark_green_pixel_countMessageType dark_green_pixel_countType = new Dark_green_pixel_countMessageType();
protected final Side_camera_heightMessageType side_camera_heightType = new Side_camera_heightMessageType();
protected final Plant_StateMessageType Plant_StateType = new Plant_StateMessageType();
protected final Timer_startMessageType timer_startType = new Timer_startMessageType();
protected final Timer_cancelMessageType timer_cancelType = new Timer_cancelMessageType();
protected final Timer_timeoutMessageType timer_timeoutType = new Timer_timeoutMessageType();
//Empty Constructor
public PIM() {
super();
}

//Getters and Setters for non readonly/final attributes
public double getPIM_current_green_pixel_count_var() {
return PIM_current_green_pixel_count_var;
}

public void setPIM_current_green_pixel_count_var(double PIM_current_green_pixel_count_var) {
this.PIM_current_green_pixel_count_var = PIM_current_green_pixel_count_var;
}

public PIM initPIM_current_green_pixel_count_var(double PIM_current_green_pixel_count_var) {
this.PIM_current_green_pixel_count_var = PIM_current_green_pixel_count_var;
return this;
}

public int getPIM_section_id_var() {
return PIM_section_id_var;
}

public void setPIM_section_id_var(int PIM_section_id_var) {
this.PIM_section_id_var = PIM_section_id_var;
}

public PIM initPIM_section_id_var(int PIM_section_id_var) {
this.PIM_section_id_var = PIM_section_id_var;
return this;
}

public double getPIM_green_pixel_sum_var() {
return PIM_green_pixel_sum_var;
}

public void setPIM_green_pixel_sum_var(double PIM_green_pixel_sum_var) {
this.PIM_green_pixel_sum_var = PIM_green_pixel_sum_var;
}

public PIM initPIM_green_pixel_sum_var(double PIM_green_pixel_sum_var) {
this.PIM_green_pixel_sum_var = PIM_green_pixel_sum_var;
return this;
}

public String getPIM_current_plant_state_var() {
return PIM_current_plant_state_var;
}

public void setPIM_current_plant_state_var(String PIM_current_plant_state_var) {
this.PIM_current_plant_state_var = PIM_current_plant_state_var;
}

public PIM initPIM_current_plant_state_var(String PIM_current_plant_state_var) {
this.PIM_current_plant_state_var = PIM_current_plant_state_var;
return this;
}

public double getPIM_current_dark_green_pixel_count_var() {
return PIM_current_dark_green_pixel_count_var;
}

public void setPIM_current_dark_green_pixel_count_var(double PIM_current_dark_green_pixel_count_var) {
this.PIM_current_dark_green_pixel_count_var = PIM_current_dark_green_pixel_count_var;
}

public PIM initPIM_current_dark_green_pixel_count_var(double PIM_current_dark_green_pixel_count_var) {
this.PIM_current_dark_green_pixel_count_var = PIM_current_dark_green_pixel_count_var;
return this;
}

public double getPIM_current_light_green_pixel_count_var() {
return PIM_current_light_green_pixel_count_var;
}

public void setPIM_current_light_green_pixel_count_var(double PIM_current_light_green_pixel_count_var) {
this.PIM_current_light_green_pixel_count_var = PIM_current_light_green_pixel_count_var;
}

public PIM initPIM_current_light_green_pixel_count_var(double PIM_current_light_green_pixel_count_var) {
this.PIM_current_light_green_pixel_count_var = PIM_current_light_green_pixel_count_var;
return this;
}

//Getters for Ports
public Port getTimer_port() {
return timer_port;
}
public Port getTo_psm_port() {
return to_psm_port;
}
public Port getFrom_psm_port() {
return from_psm_port;
}
private CompositeState buildPIM_Plant_State(){
final AtomicState state_PIM_Plant_State_Germination = new AtomicState("Germination");
state_PIM_Plant_State_Germination.onEntry(()->{
if(getPIM_current_plant_state_var().equals("Germination")) {

} else {
PIM_current_plant_state_var = (String) ("Germination");
sendPlant_State_via_to_psm((String) (getPIM_current_plant_state_var()));
sendTimer_start_via_timer((int) (10 * 24 * 60 * 60 * 1000));

}
});
state_PIM_Plant_State_Germination.onExit(()->{
sendTimer_cancel_via_timer();
});

final AtomicState state_PIM_Plant_State_Seedling = new AtomicState("Seedling");
state_PIM_Plant_State_Seedling.onEntry(()->{
if(getPIM_current_plant_state_var().equals("Seedling")) {

} else {
PIM_current_plant_state_var = (String) ("Seedling");
sendPlant_State_via_to_psm((String) (getPIM_current_plant_state_var()));
sendTimer_start_via_timer((int) (14 * 24 * 60 * 60 * 1000));

}
});
state_PIM_Plant_State_Seedling.onExit(()->{
sendTimer_cancel_via_timer();
});

final AtomicState state_PIM_Plant_State_Growing = new AtomicState("Growing");
state_PIM_Plant_State_Growing.onEntry(()->{
if(getPIM_current_plant_state_var().equals("Growing")) {

} else {
PIM_current_plant_state_var = (String) ("Growing");
sendPlant_State_via_to_psm((String) (getPIM_current_plant_state_var()));
PIM_green_pixel_sum_var = (double) (getPIM_current_dark_green_pixel_count_var() + getPIM_current_green_pixel_count_var() + getPIM_current_light_green_pixel_count_var());

}
});
final AtomicState state_PIM_Plant_State_Fruting = new AtomicState("Fruting");
state_PIM_Plant_State_Fruting.onEntry(()->{
if(getPIM_current_plant_state_var().equals("Fruting")) {

} else {
PIM_current_plant_state_var = (String) ("Fruting");
sendPlant_State_via_to_psm((String) (getPIM_current_plant_state_var()));
PIM_green_pixel_sum_var = (double) (getPIM_current_dark_green_pixel_count_var() + getPIM_current_green_pixel_count_var() + getPIM_current_light_green_pixel_count_var());

}
});
final AtomicState state_PIM_Plant_State_Dying_During_Germination = new AtomicState("Dying_During_Germination");
state_PIM_Plant_State_Dying_During_Germination.onEntry(()->{
if(getPIM_current_plant_state_var().equals("Dying During Germination")) {

} else {
PIM_current_plant_state_var = (String) ("Dying During Germination");
sendPlant_State_via_to_psm((String) (getPIM_current_plant_state_var()));

}
});
final AtomicState state_PIM_Plant_State_Dying_During_Seedling = new AtomicState("Dying_During_Seedling");
state_PIM_Plant_State_Dying_During_Seedling.onEntry(()->{
if(getPIM_current_plant_state_var().equals("Dying During Seedling")) {

} else {
PIM_current_plant_state_var = (String) ("Dying During Seedling");
sendPlant_State_via_to_psm((String) (getPIM_current_plant_state_var()));

}
});
final AtomicState state_PIM_Plant_State_Dying_During_Growing = new AtomicState("Dying_During_Growing");
state_PIM_Plant_State_Dying_During_Growing.onEntry(()->{
if(getPIM_current_plant_state_var().equals("Dying During Growing")) {

} else {
PIM_current_plant_state_var = (String) ("Dying During Growing");
sendPlant_State_via_to_psm((String) (getPIM_current_plant_state_var()));
PIM_green_pixel_sum_var = (double) (getPIM_current_dark_green_pixel_count_var() + getPIM_current_green_pixel_count_var() + getPIM_current_light_green_pixel_count_var());

}
});
final AtomicState state_PIM_Plant_State_Dying_During_Fruting = new AtomicState("Dying_During_Fruting");
state_PIM_Plant_State_Dying_During_Fruting.onEntry(()->{
if(getPIM_current_plant_state_var().equals("Dying During Fruting")) {

} else {
PIM_current_plant_state_var = (String) ("Dying During Fruting");
sendPlant_State_via_to_psm((String) (getPIM_current_plant_state_var()));
PIM_green_pixel_sum_var = (double) (getPIM_current_dark_green_pixel_count_var() + getPIM_current_green_pixel_count_var() + getPIM_current_light_green_pixel_count_var());

}
});
Transition h1235908203 = new Transition();
h1235908203.from(state_PIM_Plant_State_Germination).to(state_PIM_Plant_State_Dying_During_Germination);
h1235908203.event(timer_timeoutType);
h1235908203.guard((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
return timer_timeout.id == getPIM_section_id_var();
});

h1235908203.port(timer_port);
Transition h1445758842 = new Transition();
h1445758842.from(state_PIM_Plant_State_Germination).to(state_PIM_Plant_State_Seedling);
h1445758842.event(side_camera_heightType);
h1445758842.guard((Event e)->{
final Side_camera_heightMessageType.Side_camera_heightMessage side_camera_height = (Side_camera_heightMessageType.Side_camera_heightMessage) e;
return side_camera_height.id == getPIM_section_id_var() && side_camera_height.h > 0;
});

h1445758842.port(from_psm_port);
Transition h893320639 = new Transition();
h893320639.from(state_PIM_Plant_State_Seedling).to(state_PIM_Plant_State_Dying_During_Seedling);
h893320639.event(timer_timeoutType);
h893320639.guard((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
return timer_timeout.id == getPIM_section_id_var();
});

h893320639.port(timer_port);
Transition h147089688 = new Transition();
h147089688.from(state_PIM_Plant_State_Seedling).to(state_PIM_Plant_State_Growing);
h147089688.event(light_green_pixel_countType);
h147089688.guard((Event e)->{
final Light_green_pixel_countMessageType.Light_green_pixel_countMessage light_green_pixel_count = (Light_green_pixel_countMessageType.Light_green_pixel_countMessage) e;
return light_green_pixel_count.id == getPIM_section_id_var() && light_green_pixel_count.c > 0;
});

h147089688.port(from_psm_port);
h147089688.action((Event e)->{
final Light_green_pixel_countMessageType.Light_green_pixel_countMessage light_green_pixel_count = (Light_green_pixel_countMessageType.Light_green_pixel_countMessage) e;
PIM_current_light_green_pixel_count_var = (double) (light_green_pixel_count.c);
});

Transition h734971558 = new Transition();
h734971558.from(state_PIM_Plant_State_Seedling).to(state_PIM_Plant_State_Growing);
h734971558.event(green_pixel_countType);
h734971558.guard((Event e)->{
final Green_pixel_countMessageType.Green_pixel_countMessage green_pixel_count = (Green_pixel_countMessageType.Green_pixel_countMessage) e;
return green_pixel_count.id == getPIM_section_id_var() && green_pixel_count.c > 0;
});

h734971558.port(from_psm_port);
h734971558.action((Event e)->{
final Green_pixel_countMessageType.Green_pixel_countMessage green_pixel_count = (Green_pixel_countMessageType.Green_pixel_countMessage) e;
PIM_current_green_pixel_count_var = (double) (green_pixel_count.c);
});

Transition h78377968 = new Transition();
h78377968.from(state_PIM_Plant_State_Seedling).to(state_PIM_Plant_State_Growing);
h78377968.event(dark_green_pixel_countType);
h78377968.guard((Event e)->{
final Dark_green_pixel_countMessageType.Dark_green_pixel_countMessage dark_green_pixel_count = (Dark_green_pixel_countMessageType.Dark_green_pixel_countMessage) e;
return dark_green_pixel_count.id == getPIM_section_id_var() && dark_green_pixel_count.c > 0;
});

h78377968.port(from_psm_port);
h78377968.action((Event e)->{
final Dark_green_pixel_countMessageType.Dark_green_pixel_countMessage dark_green_pixel_count = (Dark_green_pixel_countMessageType.Dark_green_pixel_countMessage) e;
PIM_current_dark_green_pixel_count_var = (double) (dark_green_pixel_count.c);
});

Transition h524566446 = new Transition();
h524566446.from(state_PIM_Plant_State_Growing).to(state_PIM_Plant_State_Dying_During_Growing);
h524566446.event(green_pixel_countType);
h524566446.guard((Event e)->{
final Green_pixel_countMessageType.Green_pixel_countMessage green_pixel_count = (Green_pixel_countMessageType.Green_pixel_countMessage) e;
return green_pixel_count.id == getPIM_section_id_var() && getPIM_green_pixel_sum_var() < getPIM_current_dark_green_pixel_count_var() + getPIM_current_green_pixel_count_var() + getPIM_current_light_green_pixel_count_var();
});

h524566446.port(from_psm_port);
Transition h1014824123 = new Transition();
h1014824123.from(state_PIM_Plant_State_Growing).to(state_PIM_Plant_State_Dying_During_Growing);
h1014824123.event(light_green_pixel_countType);
h1014824123.guard((Event e)->{
final Light_green_pixel_countMessageType.Light_green_pixel_countMessage light_green_pixel_count = (Light_green_pixel_countMessageType.Light_green_pixel_countMessage) e;
return light_green_pixel_count.id == getPIM_section_id_var() && getPIM_green_pixel_sum_var() < getPIM_current_dark_green_pixel_count_var() + getPIM_current_green_pixel_count_var() + getPIM_current_light_green_pixel_count_var();
});

h1014824123.port(from_psm_port);
Transition h1968298538 = new Transition();
h1968298538.from(state_PIM_Plant_State_Growing).to(state_PIM_Plant_State_Dying_During_Growing);
h1968298538.event(dark_green_pixel_countType);
h1968298538.guard((Event e)->{
final Dark_green_pixel_countMessageType.Dark_green_pixel_countMessage dark_green_pixel_count = (Dark_green_pixel_countMessageType.Dark_green_pixel_countMessage) e;
return dark_green_pixel_count.id == getPIM_section_id_var() && getPIM_green_pixel_sum_var() < getPIM_current_dark_green_pixel_count_var() + getPIM_current_green_pixel_count_var() + getPIM_current_light_green_pixel_count_var();
});

h1968298538.port(from_psm_port);
Transition h380216561 = new Transition();
h380216561.from(state_PIM_Plant_State_Growing).to(state_PIM_Plant_State_Fruting);
h380216561.event(dark_green_pixel_countType);
h380216561.guard((Event e)->{
final Dark_green_pixel_countMessageType.Dark_green_pixel_countMessage dark_green_pixel_count = (Dark_green_pixel_countMessageType.Dark_green_pixel_countMessage) e;
return dark_green_pixel_count.id == getPIM_section_id_var() && dark_green_pixel_count.c > getPIM_current_green_pixel_count_var() + getPIM_current_light_green_pixel_count_var();
});

h380216561.port(from_psm_port);
Transition h1205321651 = new Transition();
h1205321651.from(state_PIM_Plant_State_Fruting).to(state_PIM_Plant_State_Growing);
h1205321651.event(light_green_pixel_countType);
h1205321651.guard((Event e)->{
final Light_green_pixel_countMessageType.Light_green_pixel_countMessage light_green_pixel_count = (Light_green_pixel_countMessageType.Light_green_pixel_countMessage) e;
return light_green_pixel_count.id == getPIM_section_id_var() && light_green_pixel_count.c > getPIM_current_dark_green_pixel_count_var();
});

h1205321651.port(from_psm_port);
h1205321651.action((Event e)->{
final Light_green_pixel_countMessageType.Light_green_pixel_countMessage light_green_pixel_count = (Light_green_pixel_countMessageType.Light_green_pixel_countMessage) e;
PIM_current_light_green_pixel_count_var = (double) (light_green_pixel_count.c);
});

Transition h648972298 = new Transition();
h648972298.from(state_PIM_Plant_State_Fruting).to(state_PIM_Plant_State_Growing);
h648972298.event(green_pixel_countType);
h648972298.guard((Event e)->{
final Green_pixel_countMessageType.Green_pixel_countMessage green_pixel_count = (Green_pixel_countMessageType.Green_pixel_countMessage) e;
return green_pixel_count.id == getPIM_section_id_var() && green_pixel_count.c > getPIM_current_dark_green_pixel_count_var();
});

h648972298.port(from_psm_port);
h648972298.action((Event e)->{
final Green_pixel_countMessageType.Green_pixel_countMessage green_pixel_count = (Green_pixel_countMessageType.Green_pixel_countMessage) e;
PIM_current_green_pixel_count_var = (double) (green_pixel_count.c);
});

Transition h394349340 = new Transition();
h394349340.from(state_PIM_Plant_State_Fruting).to(state_PIM_Plant_State_Dying_During_Fruting);
h394349340.event(dark_green_pixel_countType);
h394349340.guard((Event e)->{
final Dark_green_pixel_countMessageType.Dark_green_pixel_countMessage dark_green_pixel_count = (Dark_green_pixel_countMessageType.Dark_green_pixel_countMessage) e;
return dark_green_pixel_count.id == getPIM_section_id_var() && dark_green_pixel_count.c < getPIM_green_pixel_sum_var();
});

h394349340.port(from_psm_port);
Transition h1529842358 = new Transition();
h1529842358.from(state_PIM_Plant_State_Dying_During_Germination).to(state_PIM_Plant_State_Seedling);
h1529842358.event(side_camera_heightType);
h1529842358.guard((Event e)->{
final Side_camera_heightMessageType.Side_camera_heightMessage side_camera_height = (Side_camera_heightMessageType.Side_camera_heightMessage) e;
return side_camera_height.id == getPIM_section_id_var() && side_camera_height.h > 0;
});

h1529842358.port(from_psm_port);
Transition h1723498053 = new Transition();
h1723498053.from(state_PIM_Plant_State_Dying_During_Seedling).to(state_PIM_Plant_State_Seedling);
h1723498053.event(side_camera_heightType);
h1723498053.guard((Event e)->{
final Side_camera_heightMessageType.Side_camera_heightMessage side_camera_height = (Side_camera_heightMessageType.Side_camera_heightMessage) e;
return side_camera_height.id == getPIM_section_id_var() && side_camera_height.h > 0;
});

h1723498053.port(from_psm_port);
Transition h1220747354 = new Transition();
h1220747354.from(state_PIM_Plant_State_Dying_During_Growing).to(state_PIM_Plant_State_Growing);
h1220747354.event(light_green_pixel_countType);
h1220747354.guard((Event e)->{
final Light_green_pixel_countMessageType.Light_green_pixel_countMessage light_green_pixel_count = (Light_green_pixel_countMessageType.Light_green_pixel_countMessage) e;
return light_green_pixel_count.id == getPIM_section_id_var() && getPIM_green_pixel_sum_var() < getPIM_current_dark_green_pixel_count_var() + getPIM_current_green_pixel_count_var() + getPIM_current_light_green_pixel_count_var();
});

h1220747354.port(from_psm_port);
h1220747354.action((Event e)->{
final Light_green_pixel_countMessageType.Light_green_pixel_countMessage light_green_pixel_count = (Light_green_pixel_countMessageType.Light_green_pixel_countMessage) e;
PIM_current_light_green_pixel_count_var = (double) (light_green_pixel_count.c);
});

Transition h1732261462 = new Transition();
h1732261462.from(state_PIM_Plant_State_Dying_During_Growing).to(state_PIM_Plant_State_Growing);
h1732261462.event(green_pixel_countType);
h1732261462.guard((Event e)->{
final Green_pixel_countMessageType.Green_pixel_countMessage green_pixel_count = (Green_pixel_countMessageType.Green_pixel_countMessage) e;
return green_pixel_count.id == getPIM_section_id_var() && getPIM_green_pixel_sum_var() < getPIM_current_dark_green_pixel_count_var() + getPIM_current_green_pixel_count_var() + getPIM_current_light_green_pixel_count_var();
});

h1732261462.port(from_psm_port);
h1732261462.action((Event e)->{
final Green_pixel_countMessageType.Green_pixel_countMessage green_pixel_count = (Green_pixel_countMessageType.Green_pixel_countMessage) e;
PIM_current_green_pixel_count_var = (double) (green_pixel_count.c);
});

Transition h990830650 = new Transition();
h990830650.from(state_PIM_Plant_State_Dying_During_Growing).to(state_PIM_Plant_State_Growing);
h990830650.event(dark_green_pixel_countType);
h990830650.guard((Event e)->{
final Dark_green_pixel_countMessageType.Dark_green_pixel_countMessage dark_green_pixel_count = (Dark_green_pixel_countMessageType.Dark_green_pixel_countMessage) e;
return dark_green_pixel_count.id == getPIM_section_id_var() && getPIM_green_pixel_sum_var() < getPIM_current_dark_green_pixel_count_var() + getPIM_current_green_pixel_count_var() + getPIM_current_light_green_pixel_count_var();
});

h990830650.port(from_psm_port);
h990830650.action((Event e)->{
final Dark_green_pixel_countMessageType.Dark_green_pixel_countMessage dark_green_pixel_count = (Dark_green_pixel_countMessageType.Dark_green_pixel_countMessage) e;
PIM_current_green_pixel_count_var = (double) (dark_green_pixel_count.c);
});

Transition h253767021 = new Transition();
h253767021.from(state_PIM_Plant_State_Dying_During_Fruting).to(state_PIM_Plant_State_Growing);
h253767021.event(light_green_pixel_countType);
h253767021.guard((Event e)->{
final Light_green_pixel_countMessageType.Light_green_pixel_countMessage light_green_pixel_count = (Light_green_pixel_countMessageType.Light_green_pixel_countMessage) e;
return light_green_pixel_count.id == getPIM_section_id_var() && getPIM_green_pixel_sum_var() < getPIM_current_dark_green_pixel_count_var() + getPIM_current_green_pixel_count_var() + getPIM_current_light_green_pixel_count_var();
});

h253767021.port(from_psm_port);
h253767021.action((Event e)->{
final Light_green_pixel_countMessageType.Light_green_pixel_countMessage light_green_pixel_count = (Light_green_pixel_countMessageType.Light_green_pixel_countMessage) e;
PIM_current_light_green_pixel_count_var = (double) (light_green_pixel_count.c);
});

Transition h56112634 = new Transition();
h56112634.from(state_PIM_Plant_State_Dying_During_Fruting).to(state_PIM_Plant_State_Growing);
h56112634.event(green_pixel_countType);
h56112634.guard((Event e)->{
final Green_pixel_countMessageType.Green_pixel_countMessage green_pixel_count = (Green_pixel_countMessageType.Green_pixel_countMessage) e;
return green_pixel_count.id == getPIM_section_id_var() && getPIM_green_pixel_sum_var() < getPIM_current_dark_green_pixel_count_var() + getPIM_current_green_pixel_count_var() + getPIM_current_light_green_pixel_count_var();
});

h56112634.port(from_psm_port);
h56112634.action((Event e)->{
final Green_pixel_countMessageType.Green_pixel_countMessage green_pixel_count = (Green_pixel_countMessageType.Green_pixel_countMessage) e;
PIM_current_green_pixel_count_var = (double) (green_pixel_count.c);
});

Transition h255041198 = new Transition();
h255041198.from(state_PIM_Plant_State_Dying_During_Fruting).to(state_PIM_Plant_State_Growing);
h255041198.event(dark_green_pixel_countType);
h255041198.guard((Event e)->{
final Dark_green_pixel_countMessageType.Dark_green_pixel_countMessage dark_green_pixel_count = (Dark_green_pixel_countMessageType.Dark_green_pixel_countMessage) e;
return dark_green_pixel_count.id == getPIM_section_id_var() && getPIM_green_pixel_sum_var() < getPIM_current_dark_green_pixel_count_var() + getPIM_current_green_pixel_count_var() + getPIM_current_light_green_pixel_count_var();
});

h255041198.port(from_psm_port);
h255041198.action((Event e)->{
final Dark_green_pixel_countMessageType.Dark_green_pixel_countMessage dark_green_pixel_count = (Dark_green_pixel_countMessageType.Dark_green_pixel_countMessage) e;
PIM_current_green_pixel_count_var = (double) (dark_green_pixel_count.c);
});

final CompositeState state_PIM_Plant_State = new CompositeState("Plant_State");
state_PIM_Plant_State.onEntry(()->{
});
state_PIM_Plant_State.add(state_PIM_Plant_State_Germination);
state_PIM_Plant_State.add(state_PIM_Plant_State_Seedling);
state_PIM_Plant_State.add(state_PIM_Plant_State_Growing);
state_PIM_Plant_State.add(state_PIM_Plant_State_Fruting);
state_PIM_Plant_State.add(state_PIM_Plant_State_Dying_During_Germination);
state_PIM_Plant_State.add(state_PIM_Plant_State_Dying_During_Seedling);
state_PIM_Plant_State.add(state_PIM_Plant_State_Dying_During_Growing);
state_PIM_Plant_State.add(state_PIM_Plant_State_Dying_During_Fruting);
state_PIM_Plant_State.initial(state_PIM_Plant_State_Germination);
return state_PIM_Plant_State;
}

public Component buildBehavior(String session, Component root) {
if (root == null) {
//Init ports
timer_port = new Port("timer", this);
to_psm_port = new Port("to_psm", this);
from_psm_port = new Port("from_psm", this);
} else {
timer_port = ((PIM)root).timer_port;
to_psm_port = ((PIM)root).to_psm_port;
from_psm_port = ((PIM)root).from_psm_port;
}
if (session == null){
//Init state machine
behavior = buildPIM_Plant_State();
}
return this;
}

}
